<?phpnamespace controller;use models\cashier;use models\product;include '../models/cashier.php';include '../models/product.php';class cashierController{    public function showAll(): void    {        $list = new cashier();        $data = $list->showProductList('Active','Active');        $card = '';        if ($data) {            foreach ($data as $row) {                $card .= '                <form id="productForm" method="post" class="card col-lg-3 text-center border-0 p-3 shadow-sm">                    <img style="height: 30vh" src="../assets/productImages'.htmlspecialchars($row['Product_Image']) . '"                          class="card-img-top col-lg-3" alt="Product Image">                    <div class="card-body p-3">                        <h6 class="card-title mb-1 text-uppercase fw-bold">' . htmlspecialchars($row['Product_Name']) . '</h6>                        <p class="card-text mb-1 text-muted fs-5">₱' . htmlspecialchars($row['price']) . '</p>                                                <input type="hidden" value="' . htmlspecialchars($row['Ingredient_IDs']) . '" name="IngredientIds">                        <input type="hidden" name="productId" value="' . htmlspecialchars($row['Product_ID']) . '">                        <input type="hidden" value="' . htmlspecialchars($row['Product_Image']) . '" name="productImage">                        <input type="hidden" value="' . htmlspecialchars($row['Product_Name']) . '" name="Product_Name">                        <input id="Price" type="hidden" value="' . htmlspecialchars($row['price']) . '" name="price">                                          <div class="quantity-container d-flex align-items-center justify-content-center my-2">                            <button type="button" class="btn btn-sm btn-outline-primary" onclick="changeQuantity(this, -1)">-</button>                            <input                                id="quantity"                                type="number"                                 name="quantity"                                 value="1"                                 min="1"                                 class="form-control text-center mx-2"                                 style="width: 60px;"                            >                            <button type="button" class="btn btn-sm btn-outline-primary" onclick="changeQuantity(this, 1)">+</button>                        </div>                        <button style="background-color: #6610F2" type="submit" class="btn text-light border rounded-pill px-4">                            Add                        </button>                    </div>                </form>            ';            }            echo $card;        }    }    public function processPurchase(): void    {        $storeSales = new cashier();        $response = ['success' => false, 'message' => ''];        $quantity = $_POST['quantity'];        $productId = $_POST['productId'];        $price = $_POST['price'];        $image = $_POST['productImage'];        $total = $price * $quantity;        $saleDate = date('Y-m-d');        $Ingredient_IDs = $_POST['IngredientIds'];        // Step 1: Check stock levels        $lowStockIngredients = $storeSales->checkStockLevels($Ingredient_IDs, $quantity);        if (!empty($lowStockIngredients)) {            // Return error if any ingredient is low on stock            $response['message'] = 'Some ingredients have low or no stock: ';            foreach ($lowStockIngredients as $ingredient) {                $response['message'] .= "Ingredient ID {$ingredient['ingredientId']} requires {$ingredient['required_quantity']} but only has {$ingredient['stock_quantity']}. ";            }        } else {            // Step 2: Process the sale and reduce stock            if ($storeSales->storeSales($quantity, $productId, $saleDate, $total, $image)) {                $storeSales->decreaseIngredients($Ingredient_IDs, $productId, $quantity);                $response['success'] = true;                $response['message'] = 'Purchase processed successfully.';            } else {                $response['message'] = 'Error while storing salesController.';            }        }        echo json_encode($response);    }    public function showPurchaseList()    {        $purchase = new cashier();        $product = new product();        $data = $purchase->showAll();        $tr = '';        if ($data){            foreach ($data as $row){                $productName = $product->showProductNameBaseOnId($row['product_Id']);                $tr .= '                 <tr>                 <td><img style="height: 50px; width: 50px; object-fit: cover" class="img-thumbnail rounded-circle" src="../assets/productImages'.$row['image'] .'" alt="image" </td>                   <td>'.$productName['productName'].'</td>                      <td>'.$row['FirstOrderDate'].'</td>                      <td>₱'. number_format($row['TotalSales']).'</td>                 </tr>                ';            }            echo $tr;        }    }    public function catgorySearch()    {        $status  = "Active";        $category =  $_POST['category'];        $items = new cashier();        $data = $items->showByCategory($category,$status);        $card = '';        if ($data) {            foreach ($data as $row) {                $card .= '                <form id="productForm" method="post" class="card col-lg-3 text-center border-0 p-3 shadow-sm">                  <img style="height: 30vh" src="../assets/productImages'.htmlspecialchars($row['Product_Image']) . '"                          class="card-img-top col-lg-3" alt="Product Image">                    <div class="card-body p-3">                        <h6 class="card-title mb-1 text-uppercase fw-bold">' . htmlspecialchars($row['Product_Name']) . '</h6>                        <p class="card-text mb-1 text-muted fs-5">₱' . htmlspecialchars($row['price']) . '</p>                                                <input type="hidden" value="' . htmlspecialchars($row['Ingredient_IDs']) . '" name="IngredientIds">                        <input type="hidden" name="productId" value="' . htmlspecialchars($row['Product_ID']) . '">                        <input type="hidden" value="' . htmlspecialchars($row['Product_Image']) . '" name="productImage">                        <input type="hidden" value="' . htmlspecialchars($row['Product_Name']) . '" name="Product_Name">                        <input id="Price" type="hidden" value="' . htmlspecialchars($row['price']) . '" name="price">                        <div class="quantity-container d-flex align-items-center justify-content-center my-2">                            <button type="button" class="btn btn-sm btn-outline-primary" onclick="changeQuantity(this, -1)">-</button>                            <input                                id="quantity"                                type="number"                                 name="quantity"                                 value="1"                                 min="1"                                 class="form-control text-center mx-2"                                 style="width: 60px;"                            >                            <button type="button" class="btn btn-sm btn-outline-primary" onclick="changeQuantity(this, 1)">+</button>                        </div>                        <button style="background-color: #6610F2" type="submit" class="btn text-light border rounded-pill px-4">                            Add                        </button>                    </div>                </form>            ';            }            echo $card;        }else{            echo "<h5>No Available Product in this Category</h5>";        }    }}// Handle AJAX requestsif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action'])) {    $purchase = new cashierController();    switch ($_POST['action']) {        case 'showAll':            $purchase->showAll();            break;        case 'storeSales':            $purchase->processPurchase();            break;        case 'showByCategory':            $purchase->catgorySearch();            break;        default:            echo json_encode(['success' => false, 'message' => 'Invalid action.']);            break;    }}