<?phpnamespace controller;use models\ingredients;require_once '../models/ingredients.php';class ingredientController{ public function store():void {     $fields = [       'Ingredient_Name' => 'ingredient name is required',       'Unit' => 'unit is required',       'stock' => 'stock is required',         'Reorder' => 'reorder level is required'     ];     $data = [];     $error = [];     foreach ($fields as $field => $message){         if (!isset($_POST[$field]) || trim($_POST[$field]) === '' ){             $error[$field] = $message;         }else{             $data[$field] = htmlspecialchars($_POST[$field]);         }     }     if (!empty($error)){         $data['success'] = false;         $data['errors'] = $error;         echo json_encode($data);         return;     }     $ingredient = new ingredients();     $ingredient->store($data['Ingredient_Name'],$data['Unit'],$data['stock'],$data['Reorder']); } public function show():void {     $ingredientList = new ingredients();     $data = $ingredientList->showAll();      $select = '';     if ($data){       foreach ($data as $row){           $select .= '<option value="'.$row['ingredientId'].'">'.$row['ingredient_Name'].'</option>';       }     }else{         $select .= '<option value="">No Ingredient Available</option>';     }     echo $select; } public function showAll():void {     $ingredients = new ingredients();     $data = $ingredients->showAll();     $table = '';     foreach ($data  as $row){         $table .= '                <tr>                   <th>'.$row['ingredientId'].'</th>                   <td>'.$row['ingredient_Name'].'</td>                    <td>'.$row['unit'].'</td>                    <td>'.$row['stock_quantity'].'</td>                     <td>'.$row['reorder_level'].'</td>                   <td>                   <button style="background-color: #6610F2" id="btnEditIngredient" value="'.$row['ingredientId'].'" class="btn badge text-light">Edit</button>                   <button  style="background-color: #6610F2"  id="btnArchive" value="'.$row['ingredientId'].'" class="btn badge text-light">Archive</button>                 </td>               </tr>             ';     }     echo $table; } public function showBaseOnId():void // show base on id use for updating ingredientList {   $id = trim($_POST['Id']);   if (!isset($id)){       echo json_encode(['success' => false, 'message' => 'No Id Probated']);       return;   }   $ingredient = new ingredients();   $data = $ingredient->showBaseOnId($id);   $modal = '';   if ($data){       foreach ($data as $row){          $modal .= '          <!-- Modal -->       <div class="modal fade" id="modalUpdate_ingredient_'.$id.'" tabindex="-1" aria-labelledby="exampleModalLabel" data-bs-backdrop="static" aria-hidden="true">    <form id="form_ingredientUpdate" class="modal-dialog modal-dialog-centered modal-lg">        <div class="modal-content">            <div style="background-color: #6610F2" class="modal-header">                <h1 class="modal-title fs-6 text-light" id="exampleModalLabel">Update Ingredients</h1>                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>            </div>            <div class="modal-body">                <div class="form-floating mb-3">                    <input type="text" name="Ingredient_Name" value="'.$row['ingredient_Name'].'" class="form-control" id="Ingredient_Name">                    <label for="Ingredient_Name">Ingredient name</label>                </div>                <div class="form-floating mb-3">                    <input name="Unit" type="text" value="'.$row['unit'].'" class="form-control" id="Unit">                    <label for="Unit">Unit</label>                       </div>                <div class="form-floating mb-3">                    <input name="stock" min="1" type="number" value="'.$row['stock_quantity'].'" class="form-control" id="stock">                    <label for="stock">stock Quantity</label>                </div>                <div class="form-floating mb-3">                    <input name="Reorder" min="1" type="number" value="'.$row['reorder_level'].'" class="form-control" id="Reorder">                    <label for="Reorder">Reorder Level</label>                </div>                <input name="id" type="hidden" value="'.$id.'">            </div>            <div class="modal-footer">                <button  type="button" class="btn bg-danger text-light bg-opacity-75" data-bs-dismiss="modal">Close</button>                <button style="background-color: #6610F2" type="submit" class="btn text-light">                    Save Changes                </button>            </div>        </div>    </form></div>          ';       }       echo $modal;   } } public function update():void {     $fields = [       'Ingredient_Name' => 'ingredient name is required',         'Unit' => 'unit is required',         'stock' => 'stock level is required',         'Reorder' => 'reorder level is required'     ];     $id = trim($_POST['id']);     $data = [];     $error = [];     foreach ($fields as $field => $message){         if (!isset($_POST[$field]) ||  trim($_POST[$field]) === ''){           $error[$field] = $message;         }else{             $data[$field] = htmlspecialchars($_POST[$field]);         }     }     if (!empty($error)){         $data['success'] = false;         $data['errors'] = $error;         echo json_encode($data);         return;     }     $ingredient = new ingredients();     $ingredient->update($data['Ingredient_Name'],$data['Unit'],$data['stock'],$data['Reorder'],$id); } public function archive():void {     $Id = trim($_POST['Id']);     $status = "isDeleted";     if (!isset($Id)){         echo json_encode(['success' => false,'message' => 'No Id Probated']);         return;     }     $archive = new ingredients();     $archive->archive($status,$Id); }    public function countIngredient():void    {        $countCategory = new  ingredients();        $counted = $countCategory->countIngredient('Active');        echo json_encode($counted);    }}if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action'])){    $ingredient = new ingredientController();    switch ($_POST['action']){        case 'store':            $ingredient->store();            break;        case 'showBaseOnId':            $ingredient->showBaseOnId();            break;        case 'update':            $ingredient->update();            break;        case 'archive':            $ingredient->archive();            break;        case 'counted':            $ingredient->countIngredient();            break;    }}