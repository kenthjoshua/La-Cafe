<?phpnamespace controller;use models\product;use models\salesReport;include '../models/salesReport.php';include '../models/product.php';class salesReportController{  public function DisplaySalesReport():void  {     $start_date = $_POST['start_date'];     $end_date = $_POST['end_date'];     $tableTr = '';     if (empty($start_date) || empty($end_date)){         echo '<p class="text-danger">Please select a date range</p>';         return;     }     $salesReport = new salesReport();     $product = new product();      $totalAmount = 0;     $data = $salesReport->GenerateSalesReport($start_date, $end_date);//returns an array     if ($data){         foreach ($data as $row){             // compute the total sales amount             $totalAmount += $row['SalesAmount'];             $productName = $product->showProductNameBaseOnId($row['productId']);//returns an array             $tableTr .= '             <tr>               <td>'.$productName['productName'].'</td>                  <td>'.$row['QuantitySold'].'</td>              <td>'.$row['SalesAmount'].'</td>             </tr>             ';         }         $tableTr .= '          <tr>                <td colspan="0" style="background-color: #1c3f7c" class="fw-bold text-light">Total: '.number_format($totalAmount).'</td>                 </tr>         ';     }else{         $tableTr .= '<tr><td colspan="3">No data found</td></tr>';     }     echo $tableTr;  }    public function ConvertToPdf(): void    {        require '../Vendors/fpdf186/fpdf.php';  // Ensure correct path to FPDF        $date_start = $_GET['start_date'];        $date_end = $_GET['end_date'];        $total = 0;        $salesReport = new salesReport();        $product = new product();        $data = $salesReport->GenerateSalesReport($date_start, $date_end);        $pdf = new \FPDF();        $pdf->AddPage();        if ($data) {            // Title            $pdf->SetFont('Arial', 'B', 16);            $pdf->Cell(0, 10, 'Sales Report', 0, 1, 'C');            // Date Range            $pdf->SetFont('Arial', '', 12);            $pdf->Cell(0, 10, 'From: ' . $date_start . ' To: ' . $date_end, 0, 1, 'C');            // Set table width            $tableWidth = 110;  // Adjust based on content            $pageWidth = $pdf->GetPageWidth();            $xPos = ($pageWidth - $tableWidth) / 2;            // Table Header            $pdf->SetFont('Arial', 'B', 12);            $pdf->SetX($xPos);            $pdf->Cell(65, 10, 'Product Name', 1);            $pdf->Cell(30, 10, 'Quantity Sold', 1);            $pdf->Cell(30, 10, 'Sales Amount', 1);            $pdf->Ln();            // Table Data            foreach ($data as $row) {                $productName = $product->showProductNameBaseOnId($row['productId']);                $pdf->SetX($xPos);                $pdf->Cell(65, 10, $productName['productName'], 1);                $pdf->Cell(30, 10, $row['QuantitySold'], 1);                $pdf->Cell(30, 10, 'PHP ' . number_format($row['SalesAmount'], 2), 1);                $pdf->Ln();                $total += $row['SalesAmount'];            }            // Total Row (After Loop)            $pdf->SetFont('Arial', 'B', 12);            $pdf->SetX($xPos);            $pdf->Cell(80, 10, 'Total', 1);            $pdf->Cell(45, 10, 'PHP ' . number_format($total, 2), 1);            $pdf->Ln();        } else {            $pdf->Cell(0, 10, 'No sales data found for the selected date range.', 0, 1, 'C');        }        // Output PDF        $pdf->Output('D', 'sales_report.pdf');    }}if($_SERVER['REQUEST_METHOD'] === 'GET'){    $report = new salesReportController();    $report->ConvertToPdf();}// Handle the request from the clientif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action'])){   $report = new salesReportController();     switch ($_POST['action']){         case 'filter':             $report->DisplaySalesReport();             break;         default:             echo 'Invalid request';     }}